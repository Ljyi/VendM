
@{
    ViewBag.Title = "Index";
}


@*@model VendM.Model.ReportModel.Dto.MachineDto*@
@{
    ViewBag.Title = "Index";
}
<div class="page animation-fade">
    <div class="page-content">
        <!--高级检索部分-->
        <div class="panel" id="panelSearch">
            <div class="panel-heading">
                <h3 class="panel-title">高级检索</h3>
            </div>
            <div class="panel-body">
                <div class="col-sm-3 pannel-box">
                    <h4 class="example-title h4-box">机器名称</h4>
                    <input type="text" class="form-control input-box" id="Name" placeholder="请输入机器名称">
                </div>
                <div class="col-sm-3 pannel-box">
                    <h4 class="example-title h4-box">机器编号</h4>
                    <input type="text" class="form-control input-box" id="Code" placeholder="请输入机器编号">
                </div>
                <div class="col-sm-3 pannel-box">
                    <h4 class="example-title h4-box" style="width:70px;">机器状态</h4>
                    @Html.DropDownList("Status", ViewBag.StatusType as IEnumerable<SelectListItem>, new { @class = "form-control", placeholder = "状态类型", required = "required" })
                </div>
                <div class="col-sm-3 pannel-box">
                    <h4 class="example-title h4-box" style="width:70px;">故障类型</h4>
                    @Html.DropDownList("Fault", ViewBag.FaultType as IEnumerable<SelectListItem>, new { @class = "form-control", placeholder = "故障类型", required = "required" })
                </div>
            </div>
        </div>
        <!--列表-->
        <div class="panel">
            <div class="panel-heading">
                <div class="col-sm-12 pl-25 pr-25 pt-15 pb-10">
                    <button type="button" class="btn btn-primary" onclick="window.location=window.location">
                        <i class="fa fa-rotate-right"></i>&nbsp;刷新
                    </button>
                    <button type="button" class="btn btn-primary" data-power="Search" name="search" id="search">
                        <i class="fa fa-search"></i>&nbsp;查询
                    </button>
                    <button type="button" class="btn btn-primary" data-power="Add" name="add" id="add">
                        <i class="fa fa-plus"></i>&nbsp;添加
                    </button>
                    <button type="button" class="btn btn-primary" data-power="Edit" name="edit" id="edit">
                        <i class="fa fa-pencil"></i>&nbsp;修改
                    </button>
                    <button type="button" class="btn btn-primary" data-power="Delete" name="delete" id="delete">
                        <i class="fa fa-trash"></i>&nbsp;删除
                    </button>
                    <button type="button" class="btn btn-primary" data-power="Updata" name="setFault" id="setFault">
                        <i class="fa fa-trash"></i>&nbsp;设置故障类型
                    </button>
                </div>
            </div>
            <div class="panel-body container-fluid pb-0">
                <!--表格-->
                <table class="bootstrap-table" data-show-columns="false" id="MachineTable"></table>
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {

        //设置故障类型
        $("#setFault").on('click', function () {
            var ids = $.map($('#MachineTable').bootstrapTable('getSelections'), function (row) {
                return row.Id;
            });
            if (ids.length != 1) {
                layer.msg('请选中一行', {
                    time: 4000,
                });
            } else {
                SetFault(ids);
                //setFault(ids, faulttype, faulttime, handletime);
            }
        });
        //查询
        $("#search").on('click',
            function () {
                $("#MachineTable").bootstrapTable('refresh', { url: '/Machine/GetMachineGrid' });
            });
        //添加
        $("#add").on('click', function () {
            CreateMachine();
        });
        //修改
        $("#edit").on('click', function () {
            var id = $.map($('#MachineTable').bootstrapTable('getSelections'), function (row) {
                return row.Id;
            });
            if (id.length != 1) {
                layer.msg('请选中一行', {
                    time: 4000,
                });
            } else {
                EditMachine(id);
            }
        });
        //删除
        $("#delete").on('click', function () {
            var ids = $.map($('#MachineTable').bootstrapTable('getSelections'), function (row) {
                return row.Id;
            });
            if (ids.length < 1) {
                layer.msg('请至少选中一行', {
                    time: 4000, //20s后自动关闭
                });
            } else {
                Delete(ids.join(","));
            }
        });
        //2.初始化Button的点击事件
        var oButtonInit = new ButtonInit();
        oButtonInit.Init();
        //用户
        //1.初始化商户Table
        var MachineTablets = new MachineTableInit();
        MachineTablets.Init();
    });
    var ButtonInit = function () {
        var oInit = new Object();
        var postdata = {};
        oInit.Init = function () {
            //初始化页面上面的按钮事件
        };
        return oInit;
    };
    var MachineTableInit = function () {
        var oTableInit = new Object();
        //初始化Table
        oTableInit.Init = function () {
            $('#MachineTable').bootstrapTable({
                url: '/Machine/GetMachineGrid',
                ajaxOptions: { async: true, timeout: 10000 },
                method: 'get',
                //toolbar: '#toolbar',              //工具按钮用哪个容器
                striped: false,
                toolbar: false,                     //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                silentSort: true,
                sortStable: true,
                sortable: true,                     //是否启用排序
                sortOrder: "asc",                   //排序方式
                queryParams: oTableInit.queryParams,//这里的键的名字和控制器的变量名必须一致，这边改动，控制器也需要改成一样的
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                      //初始化加载第一页，默认第一页,并记录
                pageSize: 10,                       //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: false,                      //是否显示表格搜索
                strictSearch: true,
                showColumns: false,                  //是否显示所有的列（选择显示的列）
                showRefresh: false,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                height: "auto",                     //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                showToggle: false,                  //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: false,                  //是否显示父子表
                columns: [
                    {
                        checkbox: true,
                        visible: true              //是否显示复选框
                    },
                    {
                        field: 'StoreName',
                        title: 'Market名称',
                        sortable: true
                    },
                    {
                        field: 'Name',
                        title: '机器名称',
                        sortable: true
                    },
                    {
                        field: 'MachineNo',
                        title: '机器编号',
                        sortable: true
                    },
                    {
                        field: 'Password',
                        title: '密码',
                        sortable: true
                    },
                    {
                        field: 'StatusName',
                        title: '機器状态',
                        sortable: true
                    },
                    {
                        field: 'Address',
                        title: '机器地址',
                        sortable: true
                    },
                    {
                        field: 'FaultTypeName',
                        title: '故障类型',
                        sortable: true
                    },
                    {
                        field: 'FaultTime',
                        title: '故障时间',
                        formatter: function (value, row, index) {
                        return Common.DateFormat(value)
                    }
                    },
                    {
                        field: 'HandleTime',
                        title: '处理时间',
                        formatter: function (value, row, index) {
                            return Common.DateFormat(value)
                        }
                    },
                    {
                        field: 'CreateUser',
                        title: '添加人'
                    },
                    {
                        field: 'CredateTime',
                        title: '添加时间',
                        formatter: function (value, row, index) {
                            return Common.DateFormat(value)
                        }
                    }
                ]
            });
        };
        //得到查询的参数
        oTableInit.queryParams = function (params) {
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit,   //页面大小
                offset: params.offset,  //页码
                sort: params.sort,      //排序列名
                sortOrder: params.order, //排位命令（desc，asc）
                name: $("#Name").val(),//名称
                code: $("#Code").val(),
                status: $("#Status").val(),
                fault: $("#Fault").val()
            };
            return temp;
        };
        return oTableInit;
    };
</script>

<script>
    var CreateMachine = function () {
        layer.open({
            type: 2,
            title: '添加機器',
            shadeClose: true,
            shade: 0.8,
            area: ['25%', '70%'],
            content: 'Add'
        })
    }
    var EditMachine = function (id) {
        layer.open({
            type: 2,
            title: '编辑機器',
            shadeClose: true,
            shade: 0.8,
            area: ['25%', '70%'],
            content: 'Edit?id=' + id
        })
    }


    var SetFault = function (id) {
        layer.open({
            type: 2,
            title: '设置故障',
            shadeClose: true,
            shade: 0.8,
            area: ['20%', '40%'],
            content: 'SetFault?id=' + id
        })
    }

    //删除
    var Delete = function (ids) {
        layer.confirm('您确定要删除吗？', {
            title: '提示',
            move: false,
            anim: 1, //默认动画风格
            btn: ['确定', '取消'] //按钮
        }, function () {
            $.ajax({
                type: 'Post',
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                data: JSON.stringify({ ids: ids }),
                async: true,
                url: 'Delete',
                success: function (result) {
                    if (result.Success) {
                        layer.closeAll('dialog');
                        layer.msg('删除成功！', {
                            time: 2000,
                        });
                        $("#MachineTable").bootstrapTable('refresh', { url: '/Machine/GetMachineGrid' });
                    } else {
                        layer.open({
                            title: '提示',
                            content: '删除失败！',
                            move: false,
                            btn: "知道了"
                        });
                    }
                },
                error: function (result) {
                    console.log(result)
                }
            })
        });
    };

    ////设置故障类型
    //var setFault = function (ids, faulttype, faulttime, handletime) {
    //    $('#FaultTime').val(faulttime);
    //    if (handletime != "") {
    //        $('#HandleTime').val(handletime);
    //    }
    //    layer.open({
    //        title: '设置故障类型',
    //        area: '316px',
    //        content: $('#selectFault'),
    //        move: false,
    //        btn: ["确定", "取消"],
    //        type: 1,
    //        yes: function (index) {
    //            var fault = $('#Fault').val();
    //            var faulttime = $('#FaultTime').val();
    //            var handletime = $('#HandleTime').val();
    //            if (handletime == "") {
    //                if (fault == '-1') {
    //                    layer.msg('请选择故障类型', {
    //                        time: 2000,
    //                        type: 1
    //                    });
    //                    return false
    //                }
    //                if (faulttime == "") {
    //                    layer.msg('请选择故障时间', {
    //                        time: 2000,
    //                        type: 1
    //                    });
    //                    return false
    //                }
    //            } else {
    //                fault = -1;
    //                faulttime = "";
    //            }
    //            $.ajax({
    //                type: 'Post',
    //                contentType: "application/json;charset=utf-8",
    //                dataType: "json",
    //                data: JSON.stringify({ 'ids': ids.join(','), 'fault': fault, 'faulttime': faulttime, 'handletime': handletime}),
    //                async: true,
    //                url: 'Setfault',
    //                ajaxOptions: { async: true, timeout: 5000 },
    //                success: function (result) {
    //                    if (result.Success) {
    //                        layer.open({
    //                            title: '提示',
    //                            content: '设置成功',
    //                            move: true,
    //                            btn: "知道了"
    //                        });
    //                    } else {
    //                        layer.open({
    //                            title: '提示',
    //                            content: '设置失败！原因：' + result.errorMsg,
    //                            move: false,
    //                            btn: "知道了"
    //                        });
    //                    }
    //                },
    //                error: function (result) {
    //                    console.log(result)
    //                }
    //            })
    //        }
    //    });
    //}

</script>




